2022/06/08 21:00:45 PWD:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e
2022/06/08 21:00:45 FILENAME:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e/config/rabbitmq/rabbitmq.go
2022/06/08 21:00:45 PWD:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e
2022/06/08 21:00:45 FILENAME:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e/config/rabbitmqvhost/rabbitmqvhost.go
2022/06/08 21:00:45 PWD:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e
2022/06/08 21:00:45 FILENAME:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e/config/smoke/broker/smoke.go
2022/06/08 21:00:45 PWD:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e
2022/06/08 21:00:45 FILENAME:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e/config/smoke/brokertrigger/smoke.go
2022/06/08 21:00:45 PWD:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e
2022/06/08 21:00:45 FILENAME:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e/config/brokertrigger/brokertrigger.go
2022/06/08 21:00:45 PWD:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e
2022/06/08 21:00:45 FILENAME:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e/config/dlq/dlq.go
2022/06/08 21:00:45 PWD:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e
2022/06/08 21:00:45 FILENAME:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e/config/broker/broker.go
2022/06/08 21:00:45 PWD:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e
2022/06/08 21:00:45 FILENAME:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e/config/source/source.go
2022/06/08 21:00:45 PWD:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e
2022/06/08 21:00:45 FILENAME:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e/config/sourceproducer/sourceproducer.go
2022/06/08 21:00:45 PWD:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e
2022/06/08 21:00:45 FILENAME:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e/config/sourcevhost/sourcevhost.go
2022/06/08 21:00:45 PWD:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e
2022/06/08 21:00:45 FILENAME:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e/config/vhostsourceproducer/vhostsourceproducer.go
{"level":"info","ts":1654740045.4675062,"logger":"fallback","caller":"injection/injection.go:61","msg":"Starting informers..."}
level All, state Any, feature 

=== RUN   TestSourceVhostSetup
=== PAUSE TestSourceVhostSetup
=== CONT  TestSourceVhostSetup
2022/06/08 21:00:55 Using base gcr.io/distroless/static:nonroot@sha256:2556293984c5738fc75208cce52cf0a4762c709cf38e4bf8def65a61992da0ad for knative.dev/reconciler-test/cmd/eventshub
2022/06/08 21:00:55 Building knative.dev/reconciler-test/cmd/eventshub for linux/amd64
2022/06/08 21:01:28 Publishing gabo1208/eventshub:latest
2022/06/08 21:01:30 existing blob: sha256:630abbd66784f5d0c7f4217c493245d151ee594b4d48a5bef53fa91f96ae1551
2022/06/08 21:01:31 existing blob: sha256:138fb1e7f3b8a373412a3fd9fcc9d64f44399e314911561bf688ce9bd57e948e
2022/06/08 21:01:31 index.docker.io/gabo1208/eventshub:sha256-7af49c97bba3d7dffc0b570f6f75bd12019cb38b83906e1ee1c23dc05bfbe725.sbom: digest: sha256:2720ff07787cd1c16aa50c1f195ce995a2c6bbb4113dbed0b69ee72dfba8e367 size: 369
2022/06/08 21:01:31 Published SBOM index.docker.io/gabo1208/eventshub:sha256-7af49c97bba3d7dffc0b570f6f75bd12019cb38b83906e1ee1c23dc05bfbe725.sbom
2022/06/08 21:01:33 existing blob: sha256:b36203bdac0dc688dde48419557ef8bf5d22d9c6769443aa902cbd53a007c7c5
2022/06/08 21:01:33 existing blob: sha256:36698cfa5275e0bda70b0f864b7b174e0758ca122d8c6a54fb329d70082c73f8
2022/06/08 21:01:33 existing blob: sha256:250c06f7c38e52dc77e5c7586c3e40280dc7ff9bb9007c396e06d96736cf8542
2022/06/08 21:01:33 existing blob: sha256:e180c8baca26d771a2e62191e1c2a3f739e1b9f3e9575e79859930b351b99885
2022/06/08 21:01:33 gabo1208/eventshub:latest: digest: sha256:7af49c97bba3d7dffc0b570f6f75bd12019cb38b83906e1ee1c23dc05bfbe725 size: 752
2022/06/08 21:01:33 Published gabo1208/eventshub@sha256:7af49c97bba3d7dffc0b570f6f75bd12019cb38b83906e1ee1c23dc05bfbe725
2022/06/08 21:01:35 Using base gcr.io/distroless/static:nonroot@sha256:2556293984c5738fc75208cce52cf0a4762c709cf38e4bf8def65a61992da0ad for knative.dev/eventing-rabbitmq/cmd/failer
2022/06/08 21:01:35 Building knative.dev/eventing-rabbitmq/cmd/failer for linux/amd64
2022/06/08 21:01:38 Publishing gabo1208/failer:latest
2022/06/08 21:01:40 existing blob: sha256:16b77d05cc925a7fd22e9851a92e82ba8d0414e58188e137d2bf1c7f70b983b7
2022/06/08 21:01:40 existing blob: sha256:1983de52101a9085333700885dece4ebd9499aae0a95310ef3cc2153c014f7fe
2022/06/08 21:01:40 index.docker.io/gabo1208/failer:sha256-856f03da6bb7e4655700bfe9083280a26c6a6415b5bbd7b1d7b18a7f2deba68d.sbom: digest: sha256:bda64f928bad4169e4e9eb50e629eb7332e38f08c7257175964a0fa4dd90d0f1 size: 368
2022/06/08 21:01:40 Published SBOM index.docker.io/gabo1208/failer:sha256-856f03da6bb7e4655700bfe9083280a26c6a6415b5bbd7b1d7b18a7f2deba68d.sbom
2022/06/08 21:01:41 existing blob: sha256:0fb2092c6d4dec46c1c7b188333c044a6c432adcc4e5d138f96d033a472c1aab
2022/06/08 21:01:41 existing blob: sha256:7335aa4bf6b6a0ffcea6931cc8feed4e2260632bc28ae09973fcadb0efed887d
2022/06/08 21:01:41 existing blob: sha256:250c06f7c38e52dc77e5c7586c3e40280dc7ff9bb9007c396e06d96736cf8542
2022/06/08 21:01:42 existing blob: sha256:36698cfa5275e0bda70b0f864b7b174e0758ca122d8c6a54fb329d70082c73f8
2022/06/08 21:01:42 gabo1208/failer:latest: digest: sha256:856f03da6bb7e4655700bfe9083280a26c6a6415b5bbd7b1d7b18a7f2deba68d size: 751
2022/06/08 21:01:42 Published gabo1208/failer@sha256:856f03da6bb7e4655700bfe9083280a26c6a6415b5bbd7b1d7b18a7f2deba68d
2022/06/08 21:01:44 Using base gcr.io/distroless/static:nonroot@sha256:2556293984c5738fc75208cce52cf0a4762c709cf38e4bf8def65a61992da0ad for knative.dev/eventing-rabbitmq/test/e2e/cmd/rabbitproducer
2022/06/08 21:01:44 Building knative.dev/eventing-rabbitmq/test/e2e/cmd/rabbitproducer for linux/amd64
2022/06/08 21:01:45 Publishing gabo1208/rabbitproducer:latest
2022/06/08 21:01:50 existing blob: sha256:d00db8cf663082ff176e253509a4c83c9a31c83e47dc4daf40395c3de2086365
2022/06/08 21:01:50 existing blob: sha256:0263ad52ec48f35e1eb1b60d9ec938b4c326c229c555b6de0787de174d427772
2022/06/08 21:01:50 index.docker.io/gabo1208/rabbitproducer:sha256-0efe10fb14fde309c9d7e3df9c6b95f747471bacc892d5579f0942835f9853ee.sbom: digest: sha256:d37ff813b15814916030b4421a0e17fbf72541e78775ebf3215987e714ac81d5 size: 368
2022/06/08 21:01:50 Published SBOM index.docker.io/gabo1208/rabbitproducer:sha256-0efe10fb14fde309c9d7e3df9c6b95f747471bacc892d5579f0942835f9853ee.sbom
2022/06/08 21:01:51 existing blob: sha256:7d03b0631ddf6df9a1a6a70ed34319024ee59f61a8d369ce2993cd865b87b2fe
2022/06/08 21:01:51 existing blob: sha256:36698cfa5275e0bda70b0f864b7b174e0758ca122d8c6a54fb329d70082c73f8
2022/06/08 21:01:51 existing blob: sha256:354e130ed69454d52d903467bac49116c08c79578395e33b6d3fa2cc791f745c
2022/06/08 21:01:51 existing blob: sha256:250c06f7c38e52dc77e5c7586c3e40280dc7ff9bb9007c396e06d96736cf8542
2022/06/08 21:01:51 gabo1208/rabbitproducer:latest: digest: sha256:0efe10fb14fde309c9d7e3df9c6b95f747471bacc892d5579f0942835f9853ee size: 751
2022/06/08 21:01:51 Published gabo1208/rabbitproducer@sha256:0efe10fb14fde309c9d7e3df9c6b95f747471bacc892d5579f0942835f9853ee
    feature.go:69: {
         "name": "",
         "steps": [
          {
           "name": "install a rabbitmqcluster with a default vhost and user permissions to it",
           "states": "Any",
           "levels": "All",
           "timing": "Setup"
          },
          {
           "name": "RabbitMQCluster goes ready",
           "states": "Any",
           "levels": "All",
           "timing": "Requirement"
          },
          {
           "name": "Add credentials to default user secret",
           "states": "Any",
           "levels": "All",
           "timing": "Requirement"
          }
         ],
         "state": null,
         "refs": null
        }
=== RUN   TestSourceVhostSetup//Setup/install_a_rabbitmqcluster_with_a_default_vhost_and_user_permissions_to_it
2022/06/08 21:01:53 PWD:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e
2022/06/08 21:01:53 FILENAME:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e/config/rabbitmqvhost/rabbitmqvhost.go
2022/06/08 21:01:53 new files in /tmp/processed_yaml3865716361
I0608 21:01:53.119726    9695 manifest.go:62] Reading YAML filepath: /tmp/processed_yaml3865716361 recursive: false
I0608 21:01:53.380280    9695 manifest.go:85] Creating type rabbitmq.com/v1beta1, Kind=RabbitmqCluster name rabbitmqc
2022/06/08 21:01:53 Created:
2022/06/08 21:01:53 {RabbitmqCluster test-unheavjv rabbitmqc  rabbitmq.com/v1beta1  }
=== RUN   TestSourceVhostSetup//Requirement/RabbitMQCluster_goes_ready
2022/06/08 21:01:53 test-unheavjv/rabbitmqc condition AllReplicasReady is not ready, MissingStatefulSet: Could not find StatefulSet
2022/06/08 21:01:54 test-unheavjv/rabbitmqc condition AllReplicasReady is not ready, NotAllPodsReady: 0/1 Pods ready
2022/06/08 21:02:30 test-unheavjv/rabbitmqc condition ReconcileSuccess is not ready, Initialising: 
2022/06/08 21:02:32 rabbitmqcluster test-unheavjv/rabbitmqc is ready
=== RUN   TestSourceVhostSetup//Requirement/Add_credentials_to_default_user_secret
2022/06/08 21:02:32 Successfully updated Secret 'rabbitmqc-default-user' from namespace 'test-unheavjv' with RabbitMQ uri
2022/06/08 21:02:32 Successfully patched Secret 'rabbitmqc-default-user' from namespace 'test-unheavjv' with RabbitMQ uri
=== CONT  TestSourceVhostSetup
    feature.go:69: {
         "name": "",
         "steps": [
          {
           "name": "install a rabbitmqcluster with a default vhost and user permissions to it",
           "states": "Any",
           "levels": "All",
           "timing": "Setup"
          },
          {
           "name": "RabbitMQCluster goes ready",
           "states": "Any",
           "levels": "All",
           "timing": "Requirement"
          },
          {
           "name": "Add credentials to default user secret",
           "states": "Any",
           "levels": "All",
           "timing": "Requirement"
          }
         ],
         "state": null,
         "refs": null
        }
    feature.go:69: {
         "name": "",
         "steps": [
          {
           "name": "install recorder",
           "states": "Any",
           "levels": "All",
           "timing": "Setup"
          },
          {
           "name": "recorder is addressable",
           "states": "Any",
           "levels": "All",
           "timing": "Requirement"
          }
         ],
         "state": null,
         "refs": null
        }
=== RUN   TestSourceVhostSetup//Setup/install_recorder
    event_info_store.go:72: Store added to the EventListener, which has already seen 28 events
2022/06/08 21:02:32 new files in /tmp/processed_yaml2160879856
I0608 21:02:32.973768    9695 manifest.go:62] Reading YAML filepath: /tmp/processed_yaml2160879856 recursive: false
I0608 21:02:33.081243    9695 manifest.go:85] Creating type /v1, Kind=ServiceAccount name test-unheavjv
I0608 21:02:33.285706    9695 manifest.go:85] Creating type rbac.authorization.k8s.io/v1, Kind=Role name test-unheavjv
I0608 21:02:33.533239    9695 manifest.go:85] Creating type rbac.authorization.k8s.io/v1, Kind=RoleBinding name test-unheavjv
2022/06/08 21:02:33 Created:
2022/06/08 21:02:33 {ServiceAccount test-unheavjv test-unheavjv  v1  }
2022/06/08 21:02:33 {Role test-unheavjv test-unheavjv  rbac.authorization.k8s.io/v1  }
2022/06/08 21:02:33 {RoleBinding test-unheavjv test-unheavjv  rbac.authorization.k8s.io/v1  }
2022/06/08 21:02:33 new files in /tmp/processed_yaml2011989432
I0608 21:02:33.677359    9695 manifest.go:62] Reading YAML filepath: /tmp/processed_yaml2011989432 recursive: false
I0608 21:02:33.780870    9695 manifest.go:85] Creating type /v1, Kind=Service name recorder
I0608 21:02:33.996041    9695 manifest.go:85] Creating type /v1, Kind=Pod name recorder
2022/06/08 21:02:34 Created:
2022/06/08 21:02:34 {Service test-unheavjv recorder  v1  }
2022/06/08 21:02:34 {Pod test-unheavjv recorder  v1  }
    wait.go:382: Pod %s/%s is not running, dumping the pod object we got: test-unheavjv recorder
    wait.go:384: {
         "metadata": {
          "name": "recorder",
          "namespace": "test-unheavjv",
          "uid": "24b7dcf9-cb4e-42ba-a6b8-3d09d9b50cea",
          "resourceVersion": "18665590",
          "creationTimestamp": "2022-06-09T02:02:34Z",
          "labels": {
           "app": "eventshub-recorder"
          },
          "managedFields": [
           {
            "manager": "Go-http-client",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2022-06-09T02:02:34Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
             "f:status": {
              "f:conditions": {
               "k:{\"type\":\"ContainersReady\"}": {
                ".": {},
                "f:lastProbeTime": {},
                "f:lastTransitionTime": {},
                "f:message": {},
                "f:reason": {},
                "f:status": {},
                "f:type": {}
               },
               "k:{\"type\":\"Initialized\"}": {
                ".": {},
                "f:lastProbeTime": {},
                "f:lastTransitionTime": {},
                "f:status": {},
                "f:type": {}
               },
               "k:{\"type\":\"Ready\"}": {
                ".": {},
                "f:lastProbeTime": {},
                "f:lastTransitionTime": {},
                "f:message": {},
                "f:reason": {},
                "f:status": {},
                "f:type": {}
               }
              },
              "f:containerStatuses": {},
              "f:hostIP": {},
              "f:startTime": {}
             }
            },
            "subresource": "status"
           },
           {
            "manager": "e2e.test",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2022-06-09T02:02:34Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
             "f:metadata": {
              "f:labels": {
               ".": {},
               "f:app": {}
              }
             },
             "f:spec": {
              "f:containers": {
               "k:{\"name\":\"eventshub\"}": {
                ".": {},
                "f:env": {
                 ".": {},
                 "k:{\"name\":\"EVENT_GENERATORS\"}": {
                  ".": {},
                  "f:name": {},
                  "f:value": {}
                 },
                 "k:{\"name\":\"EVENT_LOGS\"}": {
                  ".": {},
                  "f:name": {},
                  "f:value": {}
                 },
                 "k:{\"name\":\"K_CONFIG_LOGGING\"}": {
                  ".": {},
                  "f:name": {},
                  "f:value": {}
                 },
                 "k:{\"name\":\"K_CONFIG_TRACING\"}": {
                  ".": {},
                  "f:name": {},
                  "f:value": {}
                 },
                 "k:{\"name\":\"POD_NAME\"}": {
                  ".": {},
                  "f:name": {},
                  "f:valueFrom": {
                   ".": {},
                   "f:fieldRef": {}
                  }
                 },
                 "k:{\"name\":\"SYSTEM_NAMESPACE\"}": {
                  ".": {},
                  "f:name": {},
                  "f:valueFrom": {
                   ".": {},
                   "f:fieldRef": {}
                  }
                 }
                },
                "f:image": {},
                "f:imagePullPolicy": {},
                "f:name": {},
                "f:readinessProbe": {
                 ".": {},
                 "f:failureThreshold": {},
                 "f:httpGet": {
                  ".": {},
                  "f:path": {},
                  "f:port": {},
                  "f:scheme": {}
                 },
                 "f:periodSeconds": {},
                 "f:successThreshold": {},
                 "f:timeoutSeconds": {}
                },
                "f:resources": {},
                "f:terminationMessagePath": {},
                "f:terminationMessagePolicy": {}
               }
              },
              "f:dnsPolicy": {},
              "f:enableServiceLinks": {},
              "f:restartPolicy": {},
              "f:schedulerName": {},
              "f:securityContext": {},
              "f:serviceAccount": {},
              "f:serviceAccountName": {},
              "f:terminationGracePeriodSeconds": {}
             }
            }
           }
          ]
         },
         "spec": {
          "volumes": [
           {
            "name": "kube-api-access-bjqqv",
            "projected": {
             "sources": [
              {
               "serviceAccountToken": {
                "expirationSeconds": 3607,
                "path": "token"
               }
              },
              {
               "configMap": {
                "name": "kube-root-ca.crt",
                "items": [
                 {
                  "key": "ca.crt",
                  "path": "ca.crt"
                 }
                ]
               }
              },
              {
               "downwardAPI": {
                "items": [
                 {
                  "path": "namespace",
                  "fieldRef": {
                   "apiVersion": "v1",
                   "fieldPath": "metadata.namespace"
                  }
                 }
                ]
               }
              }
             ],
             "defaultMode": 420
            }
           }
          ],
          "containers": [
           {
            "name": "eventshub",
            "image": "gabo1208/eventshub@sha256:7af49c97bba3d7dffc0b570f6f75bd12019cb38b83906e1ee1c23dc05bfbe725",
            "env": [
             {
              "name": "SYSTEM_NAMESPACE",
              "valueFrom": {
               "fieldRef": {
                "apiVersion": "v1",
                "fieldPath": "metadata.namespace"
               }
              }
             },
             {
              "name": "POD_NAME",
              "valueFrom": {
               "fieldRef": {
                "apiVersion": "v1",
                "fieldPath": "metadata.name"
               }
              }
             },
             {
              "name": "EVENT_LOGS",
              "value": "recorder,logger"
             },
             {
              "name": "EVENT_GENERATORS",
              "value": "receiver"
             },
             {
              "name": "K_CONFIG_LOGGING",
              "value": "{\"zap-logger-config\":\"{\\n  \\\"level\\\": \\\"info\\\",\\n  \\\"development\\\": false,\\n  \\\"outputPaths\\\": [\\\"stdout\\\"],\\n  \\\"errorOutputPaths\\\": [\\\"stderr\\\"],\\n  \\\"encoding\\\": \\\"json\\\",\\n  \\\"encoderConfig\\\": {\\n    \\\"timeKey\\\": \\\"ts\\\",\\n    \\\"levelKey\\\": \\\"level\\\",\\n    \\\"nameKey\\\": \\\"logger\\\",\\n    \\\"callerKey\\\": \\\"caller\\\",\\n    \\\"messageKey\\\": \\\"msg\\\",\\n    \\\"stacktraceKey\\\": \\\"stacktrace\\\",\\n    \\\"lineEnding\\\": \\\"\\\",\\n    \\\"levelEncoder\\\": \\\"\\\",\\n    \\\"timeEncoder\\\": \\\"iso8601\\\",\\n    \\\"durationEncoder\\\": \\\"\\\",\\n    \\\"callerEncoder\\\": \\\"\\\"\\n  }\\n}\\n\"}"
             },
             {
              "name": "K_CONFIG_TRACING",
              "value": "{\"backend\":\"none\",\"debug\":\"false\",\"sample-rate\":\"0.1\"}"
             }
            ],
            "resources": {},
            "volumeMounts": [
             {
              "name": "kube-api-access-bjqqv",
              "readOnly": true,
              "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
             }
            ],
            "readinessProbe": {
             "httpGet": {
              "path": "/health/ready",
              "port": 8080,
              "scheme": "HTTP"
             },
             "timeoutSeconds": 1,
             "periodSeconds": 10,
             "successThreshold": 1,
             "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
           }
          ],
          "restartPolicy": "Never",
          "terminationGracePeriodSeconds": 30,
          "dnsPolicy": "ClusterFirst",
          "serviceAccountName": "test-unheavjv",
          "serviceAccount": "test-unheavjv",
          "nodeName": "gke-cluster-1-default-pool-511b41b6-5b6r",
          "securityContext": {},
          "schedulerName": "default-scheduler",
          "tolerations": [
           {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
           },
           {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
           }
          ],
          "priority": 0,
          "enableServiceLinks": true,
          "preemptionPolicy": "PreemptLowerPriority"
         },
         "status": {
          "phase": "Pending",
          "conditions": [
           {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2022-06-09T02:02:34Z"
           },
           {
            "type": "Ready",
            "status": "False",
            "lastProbeTime": null,
            "lastTransitionTime": "2022-06-09T02:02:34Z",
            "reason": "ContainersNotReady",
            "message": "containers with unready status: [eventshub]"
           },
           {
            "type": "ContainersReady",
            "status": "False",
            "lastProbeTime": null,
            "lastTransitionTime": "2022-06-09T02:02:34Z",
            "reason": "ContainersNotReady",
            "message": "containers with unready status: [eventshub]"
           },
           {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2022-06-09T02:02:34Z"
           }
          ],
          "hostIP": "10.128.15.234",
          "startTime": "2022-06-09T02:02:34Z",
          "containerStatuses": [
           {
            "name": "eventshub",
            "state": {
             "waiting": {
              "reason": "ContainerCreating"
             }
            },
            "lastState": {},
            "ready": false,
            "restartCount": 0,
            "image": "gabo1208/eventshub@sha256:7af49c97bba3d7dffc0b570f6f75bd12019cb38b83906e1ee1c23dc05bfbe725",
            "imageID": "",
            "started": false
           }
          ],
          "qosClass": "BestEffort"
         }
        }
    wait.go:199: test-unheavjv/recorder condition is {"type":"Ready","status":"True","lastTransitionTime":"2022-06-09T02:02:35Z"}
    wait.go:257: Service test-unheavjv/recorder, ip: 10.8.3.60
    wait.go:271: Endpoints for service test-unheavjv/recorder, got 1, want >= 1
    job.go:62: test-unheavjv/recorder-readiness-check-mfoiojri job status {"startTime":"2022-06-09T02:02:38Z","active":1}
    job.go:62: test-unheavjv/recorder-readiness-check-mfoiojri job status {"startTime":"2022-06-09T02:02:38Z","active":1}
    job.go:62: test-unheavjv/recorder-readiness-check-mfoiojri job status {"startTime":"2022-06-09T02:02:38Z","active":1}
    job.go:62: test-unheavjv/recorder-readiness-check-mfoiojri job status {"startTime":"2022-06-09T02:02:38Z","active":1}
=== RUN   TestSourceVhostSetup//Requirement/recorder_is_addressable
=== CONT  TestSourceVhostSetup
    feature.go:69: {
         "name": "",
         "steps": [
          {
           "name": "install recorder",
           "states": "Any",
           "levels": "All",
           "timing": "Setup"
          },
          {
           "name": "recorder is addressable",
           "states": "Any",
           "levels": "All",
           "timing": "Requirement"
          }
         ],
         "state": null,
         "refs": null
        }
    feature.go:69: {
         "name": "",
         "steps": [
          {
           "name": "install RabbitMQ source on test-vhost",
           "states": "Any",
           "levels": "All",
           "timing": "Setup"
          },
          {
           "name": "RabbitMQ vhost-source ready goes ready",
           "states": "Alpha",
           "levels": "MUST",
           "timing": "Assert"
          },
          {
           "name": "install producer pointing to the vhost-source",
           "states": "Any",
           "levels": "All",
           "timing": "Setup"
          },
          {
           "name": "RabbitMQ vhost-source receiving messages the recorder received all sent events within the time",
           "states": "Alpha",
           "levels": "MUST",
           "timing": "Assert"
          },
          {
           "name": "Delete feature resources",
           "states": "Any",
           "levels": "All",
           "timing": "Teardown"
          }
         ],
         "state": null,
         "refs": null
        }
=== RUN   TestSourceVhostSetup//Setup/install_RabbitMQ_source_on_test-vhost
2022/06/08 21:02:50 PWD:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e
2022/06/08 21:02:50 FILENAME:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e/config/sourcevhost/sourcevhost.go
2022/06/08 21:02:50 new files in /tmp/processed_yaml4242000531
I0608 21:02:50.126394    9695 manifest.go:62] Reading YAML filepath: /tmp/processed_yaml4242000531 recursive: false
I0608 21:02:50.237066    9695 manifest.go:85] Creating type sources.knative.dev/v1alpha1, Kind=RabbitmqSource name rabbitmq-source-vhost
2022/06/08 21:02:50 Created:
2022/06/08 21:02:50 {RabbitmqSource test-unheavjv rabbitmq-source-vhost  sources.knative.dev/v1alpha1  }
=== RUN   TestSourceVhostSetup//Setup/install_producer_pointing_to_the_vhost-source
2022/06/08 21:02:50 PWD:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e
2022/06/08 21:02:50 FILENAME:  /mnt/c/Projects/VMWare/eventing-rabbitmq/test/e2e/config/vhostsourceproducer/vhostsourceproducer.go
2022/06/08 21:02:50 new files in /tmp/processed_yaml2962403566
I0608 21:02:50.386488    9695 manifest.go:62] Reading YAML filepath: /tmp/processed_yaml2962403566 recursive: false
I0608 21:02:50.490357    9695 manifest.go:85] Creating type /v1, Kind=Pod name producer
2022/06/08 21:02:50 Created:
2022/06/08 21:02:50 {Pod test-unheavjv producer  v1  }
=== RUN   TestSourceVhostSetup//Assert/[Alpha/MUST]RabbitMQ_vhost-source_ready_goes_ready
    wait.go:171: test-unheavjv/rabbitmq-source-vhost is not Ready
        
        Resource: {
          "observedGeneration": 1,
          "conditions": [
           {
            "type": "Deployed",
            "status": "False",
            "lastTransitionTime": "2022-06-09T02:02:51Z",
            "reason": "DeploymentUnavailable",
            "message": "The Deployment 'rabbitmqsource-rabbitmq-source-e20641c0c449b3b54cd2bd788f88b6df' is unavailable."
           },
           {
            "type": "ExchangeReady",
            "status": "True",
            "lastTransitionTime": "2022-06-09T02:02:51Z"
           },
           {
            "type": "Ready",
            "status": "False",
            "lastTransitionTime": "2022-06-09T02:02:51Z",
            "reason": "DeploymentUnavailable",
            "message": "The Deployment 'rabbitmqsource-rabbitmq-source-e20641c0c449b3b54cd2bd788f88b6df' is unavailable."
           },
           {
            "type": "SecretReady",
            "status": "True",
            "lastTransitionTime": "2022-06-09T02:02:51Z"
           },
           {
            "type": "SinkProvided",
            "status": "True",
            "lastTransitionTime": "2022-06-09T02:02:51Z"
           }
          ]
         }
        
    wait.go:199: test-unheavjv/rabbitmq-source-vhost condition is {"type":"Ready","status":"False","lastTransitionTime":"2022-06-09T02:02:51Z","reason":"DeploymentUnavailable","message":"The Deployment 'rabbitmqsource-rabbitmq-source-e20641c0c449b3b54cd2bd788f88b6df' is unavailable."}
    wait.go:199: test-unheavjv/rabbitmq-source-vhost condition is {"type":"Ready","status":"False","lastTransitionTime":"2022-06-09T02:02:51Z","reason":"DeploymentUnavailable","message":"The Deployment 'rabbitmqsource-rabbitmq-source-e20641c0c449b3b54cd2bd788f88b6df' is unavailable."}
    wait.go:199: test-unheavjv/rabbitmq-source-vhost condition is {"type":"Ready","status":"True","lastTransitionTime":"2022-06-09T02:02:52Z"}
    smoke_test_broker_trigger.go:59: all resources ready
=== RUN   TestSourceVhostSetup//Assert/[Alpha/MUST]RabbitMQ_vhost-source_receiving_messages_the_recorder_received_all_sent_events_within_the_time
=== RUN   TestSourceVhostSetup//Teardown/Delete_feature_resources
    feature.go:152: Deleting test-unheavjv/rabbitmq-source-vhost of GVR: sources.knative.dev/v1alpha1, Resource=rabbitmqsources
    feature.go:152: Deleting test-unheavjv/producer of GVR: /v1, Resource=pods
    feature.go:178: Deleting test-unheavjv/rabbitmq-source-vhost of GVR: sources.knative.dev/v1alpha1, Resource=rabbitmqsources
    feature.go:191: Resource sources.knative.dev/v1alpha1, Resource=rabbitmqsources test-unheavjv/rabbitmq-source-vhost still present
    feature.go:178: Deleting test-unheavjv/rabbitmq-source-vhost of GVR: sources.knative.dev/v1alpha1, Resource=rabbitmqsources
    feature.go:178: Deleting test-unheavjv/producer of GVR: /v1, Resource=pods
=== CONT  TestSourceVhostSetup
    feature.go:69: {
         "name": "",
         "steps": [
          {
           "name": "install RabbitMQ source on test-vhost",
           "states": "Any",
           "levels": "All",
           "timing": "Setup"
          },
          {
           "name": "RabbitMQ vhost-source ready goes ready",
           "states": "Alpha",
           "levels": "MUST",
           "timing": "Assert"
          },
          {
           "name": "install producer pointing to the vhost-source",
           "states": "Any",
           "levels": "All",
           "timing": "Setup"
          },
          {
           "name": "RabbitMQ vhost-source receiving messages the recorder received all sent events within the time",
           "states": "Alpha",
           "levels": "MUST",
           "timing": "Assert"
          },
          {
           "name": "Delete feature resources",
           "states": "Any",
           "levels": "All",
           "timing": "Teardown"
          }
         ],
         "state": null,
         "refs": null
        }
--- PASS: TestSourceVhostSetup (190.05s)
    --- PASS: TestSourceVhostSetup//Setup/install_a_rabbitmqcluster_with_a_default_vhost_and_user_permissions_to_it (0.40s)
    --- PASS: TestSourceVhostSetup//Requirement/RabbitMQCluster_goes_ready (39.24s)
    --- PASS: TestSourceVhostSetup//Requirement/Add_credentials_to_default_user_secret (0.21s)
    --- PASS: TestSourceVhostSetup//Setup/install_recorder (17.14s)
    --- PASS: TestSourceVhostSetup//Requirement/recorder_is_addressable (0.00s)
    --- PASS: TestSourceVhostSetup//Setup/install_RabbitMQ_source_on_test-vhost (0.26s)
    --- PASS: TestSourceVhostSetup//Setup/install_producer_pointing_to_the_vhost-source (0.26s)
    --- PASS: TestSourceVhostSetup//Assert/[Alpha/MUST]RabbitMQ_vhost-source_ready_goes_ready (2.17s)
    --- PASS: TestSourceVhostSetup//Assert/[Alpha/MUST]RabbitMQ_vhost-source_receiving_messages_the_recorder_received_all_sent_events_within_the_time (60.00s)
    --- PASS: TestSourceVhostSetup//Teardown/Delete_feature_resources (2.48s)
PASS
ok  	knative.dev/eventing-rabbitmq/test/e2e	190.224s
?   	knative.dev/eventing-rabbitmq/test/e2e/cmd/rabbitproducer	[no test files]
?   	knative.dev/eventing-rabbitmq/test/e2e/config/broker	[no test files]
?   	knative.dev/eventing-rabbitmq/test/e2e/config/brokertrigger	[no test files]
?   	knative.dev/eventing-rabbitmq/test/e2e/config/dlq	[no test files]
?   	knative.dev/eventing-rabbitmq/test/e2e/config/rabbitmq	[no test files]
?   	knative.dev/eventing-rabbitmq/test/e2e/config/rabbitmqvhost	[no test files]
?   	knative.dev/eventing-rabbitmq/test/e2e/config/smoke/broker	[no test files]
?   	knative.dev/eventing-rabbitmq/test/e2e/config/smoke/brokertrigger	[no test files]
?   	knative.dev/eventing-rabbitmq/test/e2e/config/source	[no test files]
?   	knative.dev/eventing-rabbitmq/test/e2e/config/sourceproducer	[no test files]
?   	knative.dev/eventing-rabbitmq/test/e2e/config/sourcevhost	[no test files]
?   	knative.dev/eventing-rabbitmq/test/e2e/config/vhostsourceproducer	[no test files]
