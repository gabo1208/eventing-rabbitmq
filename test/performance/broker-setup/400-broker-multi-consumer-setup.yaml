# Copyright 2022 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-broker-perf-consumer-2
  namespace: perf-eventing
spec:
  selector:
    role: rabbitmq-broker-perf-consumer-2
  ports:
  - name: http
    port: 80
    targetPort: cloudevents
    protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-broker-perf-consumer-3
  namespace: perf-eventing
spec:
  selector:
    role: rabbitmq-broker-perf-consumer-3
  ports:
  - name: http
    port: 80
    targetPort: cloudevents
    protocol: TCP

---

apiVersion: batch/v1
kind: Job
metadata:
  name: rabbitmq-broker-perf-send-receive
  namespace: perf-eventing
  labels:
    role: rabbitmq-broker-perf-consumer
spec:
  completions: 1
  parallelism: 1
  backoffLimit: 0
  template:
    metadata:
      labels:
        role: rabbitmq-broker-perf-consumer
    spec:
      serviceAccountName: perf-eventing
      restartPolicy: Never
      containers:
      - name: sender-receiver
        image: ko://knative.dev/eventing/test/test_images/performance
        args:
        - "--roles=sender,receiver"
        - "--sink=http://rabbitmq-test-broker-broker-ingress.perf-eventing.svc.cluster.local/"
        - "--aggregator=rabbitmq-broker-perf-aggregator:10000"
        - "--pace=600:60"
        env:
        - name: GOGC
          value: "off"
        - name: POD_NAME
          value: rabbitmq-broker-perf-send-receive
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 1
            memory: 2Gi
        ports:
        - name: cloudevents
          containerPort: 8080

---

apiVersion: batch/v1
kind: Job
metadata:
  name: rabbitmq-broker-perf-send-receive-2
  namespace: perf-eventing
  labels:
    role: rabbitmq-broker-perf-consumer-2
spec:
  completions: 1
  parallelism: 1
  backoffLimit: 0
  template:
    metadata:
      labels:
        role: rabbitmq-broker-perf-consumer-2
    spec:
      serviceAccountName: perf-eventing
      restartPolicy: Never
      containers:
      - name: sender-receiver
        image: ko://knative.dev/eventing/test/test_images/performance
        args:
        - "--roles=sender,receiver"
        - "--sink=http://rabbitmq-test-broker-broker-ingress.perf-eventing.svc.cluster.local/"
        - "--aggregator=rabbitmq-broker-perf-aggregator:10000"
        - "--pace=400:60"
        env:
        - name: GOGC
          value: "off"
        - name: POD_NAME
          value: rabbitmq-broker-perf-send-receive-2
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 1
            memory: 2Gi
        ports:
        - name: cloudevents
          containerPort: 8080

---

apiVersion: batch/v1
kind: Job
metadata:
  name: rabbitmq-broker-perf-send-receive-3
  namespace: perf-eventing
  labels:
    role: rabbitmq-broker-perf-consumer-3
spec:
  completions: 1
  parallelism: 1
  backoffLimit: 0
  template:
    metadata:
      labels:
        role: rabbitmq-broker-perf-consumer-3
    spec:
      serviceAccountName: perf-eventing
      restartPolicy: Never
      containers:
      - name: sender-receiver
        image: ko://knative.dev/eventing/test/test_images/performance
        args:
        - "--roles=sender,receiver"
        - "--sink=http://rabbitmq-test-broker-broker-ingress.perf-eventing.svc.cluster.local/"
        - "--aggregator=rabbitmq-broker-perf-aggregator:10000"
        - "--pace=400:60"
        env:
        - name: GOGC
          value: "off"
        - name: POD_NAME
          value: rabbitmq-broker-perf-send-receive-3
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 1
            memory: 2Gi
        ports:
        - name: cloudevents
          containerPort: 8080

---

apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: rabbitmq-trigger-perf-2
  namespace: perf-eventing
  annotations:
    # Set this to 1 for FIFO
    rabbitmq.eventing.knative.dev/parallelism: "100"
spec:
  broker: rabbitmq-test-broker
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: rabbitmq-broker-perf-consumer-2
  filter:
    attributes:
      source: rabbitmq-broker-perf-send-receive-2

---

apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: rabbitmq-trigger-perf-3
  namespace: perf-eventing
  annotations:
    # Set this to 1 for FIFO
    rabbitmq.eventing.knative.dev/parallelism: "100"
spec:
  broker: rabbitmq-test-broker
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: rabbitmq-broker-perf-consumer-3
  filter:
    attributes:
      source: rabbitmq-broker-perf-send-receive-3

---

apiVersion: v1
kind: Pod
metadata:
  name: rabbitmq-broker-perf-aggregator
  namespace: perf-eventing
  labels:
    role: rabbitmq-broker-perf-aggregator
spec:
  serviceAccountName: perf-eventing
  restartPolicy: Never
  containers:
  - name: aggregator
    image: ko://knative.dev/eventing/test/test_images/performance
    args:
    - "--roles=aggregator"
      # set to the number of senders + receivers (same image that does both counts 2)
    - "--expect-records=6"
    env:
      - name: GOGC
        value: "off"
      - name: POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
    ports:
    - name: grpc
      containerPort: 10000
    resources:
      requests:
        cpu: 1500m
        memory: 3Gi
    volumeMounts:
    - name: config-mako
      mountPath: /etc/config-mako
    terminationMessagePolicy: FallbackToLogsOnError
  - name: mako-stub
    image: ko://knative.dev/pkg/test/mako/stub-sidecar
    args:
      - "-p=10001"
    ports:
    - name: quickstore
      containerPort: 10001
    volumeMounts:
      - name: config-mako
        mountPath: /etc/config-mako
    terminationMessagePolicy: FallbackToLogsOnError
    resources:
      requests:
        memory: 4Gi
  volumes:
  - name: config-mako
    configMap:
      name: config-mako
