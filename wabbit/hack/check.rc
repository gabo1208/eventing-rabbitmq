#!/bin/rc

# The script does automatic checking on a Go package and its sub-packages, including:
# 1. gofmt         (http://golang.org/cmd/gofmt/)
# 2. goimports     (https://github.com/bradfitz/goimports)
# 3. golint        (https://github.com/golang/lint)
# 4. go vet        (http://golang.org/cmd/vet)
# 5. race detector (http://blog.golang.org/race-detector)
# 6. test coverage (http://blog.golang.org/cover)

GO=go

# Automatic checks
test -z '`{gofmt -l -w .     | tee /dev/stderr}'
test -z '`{golint .          | tee /dev/stderr}'
#$GO vet ./...

# Run test coverage on each subdirectories and merge the coverage profile.

echo 'mode: count' > coverage.txt

# Standard $GO tooling behavior is to ignore dirs with leading underscors
for(dir in `{find .  -maxdepth 10 -not -path './.git*' -not -path './Godeps/*' -type d}) {
    if(ls $dir^/*.go >/dev/null) {
	$GO test  -v -race '-covermode=atomic' '-coverprofile='^$dir^'/profile.tmp' $dir
	if(ls $dir^/profile.tmp) {
            cat $dir^/profile.tmp | tail -n +2 >> coverage.txt
            rm $dir^/profile.tmp
	}

	# Stress
	# hack/stress-test.sh
    }
}

$GO tool cover -func coverage.txt
